
GIT사용 테스트

1)git init 을 한다.

2) git commit -m "commnet 를 남긴다"

3) git branch --list

 - 로컬 branch 리스트 확인

4) git branch --all

 - 원격과 로컬을 모두 확인.
 - 원격을 표시하기 위해 /remote 가 표시됨.

 에시 : 
  *master
  remotes/orgin/master
  remotes/orgin/sandbox
  remotes/origin/video-lessons


5) git branch --remots 

 - 원격 branch 만 표시됨.    
 - 4번과 다르게 굳이 /remote 라는 표시를 하지 않음.

 예시 :
  
  origin/master
  origin/sandbox
  origin/video-lessons

6) git fetch

 - 원격 저장소에서 내용을 가져온다.

7) git checkout --track origin/video-lessons

 - 원격 저장소에 저장된 버전으로 업데이트 됨.

7-1) git checkout --track -b video-lessions origin/video-lessons

 - checkout -b 명령 - 원격 저장소 origin 에 저장된 video-lessions 로부터 video-lessons 라는 이름의 로컬 브랜치를 생성하여 추적하도록 한다. (--track)

 예시 : 

  master
  * video-lessons
  remotes/origin/master
  remotes/origin/sandbox
  remotes/origin/lessons

8) git branch 1-process_notes

  - branch 를 local 에 하나 만듭니다.

 예시 :

  * master
  1-process_notes


9) git checkout 1-process_notes

  - branch 를 전환합니다.

  예시 :

   master
   * 1-process_notes


10) git checkout -b 2-process_notes master

 - branch 를 새로 만듭니다. 
 - master 에서 얻어와서, 2-process_notes 를 만듭니다. 


11) git add <dir>/*

 - 특정 디렉토리 전체 파일을 올립니다.


12) git add *.svg 

 - 특정 확장자를 갖는 파일을 올립니다.


13) git add --update

 - git 에 기록된 적이 있는 모든 파일 중, 마지막 커밋 이후 수정된 파일을 staging 할 수 있다.
 - 오~ 짱 좋은데.
 - 확실히 이전에 커밋이후 수정된 파일만 올라가요. 짱이네요.


14) git add --all

 - 작업 폴더의 모든 수정 파일(신규 파일 포함) 을 staging 으로 전달한다. (처음 준비 영역에 들어간 모든 파일에 추가된다)
 - 이전에 staging 에 없던 파일도 들어가는구만요. 작업 폴더에 포함되었다는 이유로 말이죠.


15) git add --patch filename

 - 연관없는 수정사항을, 여러개의 작은 커밋으로 나누어 기록하기 위함.
 - 특정. 파일 내의 라인별로 첨삭할 수 있어요.

 
16) git reset HEAD git_study.txt

 - 해당 파일을 staging (git add) 했으나, 아직 commit 준비가 되지 않아서, staing 을 취소하고 싶을 때 사용.


17) git config --global core.excludesfile ~/.gitignore

 - 무시할 파일 목록은 ~/.gitignore 파일에 만들어 둘꺼예요. 라는 뜻.


18) git log --oneline
19) git show [fa04c30]

20) git tag import [fa04c30]

 - tag 를 답니다. 여기서 tag 이름은 import 가 됩니다.

21) git tag v1.0 [fa04c30]

 - fa04c30 는 2개의 tag 를 갖게 됩니다.

22) git tag

 - tag 가 걸린 값을 전부 보여 줍니다.

  예) % git tag
      import
      v1.0

23) git show v1.0

  - git show [fa04c30] 과 동일합니다.

  
