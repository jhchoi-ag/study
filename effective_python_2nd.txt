
1) f'#{i+1}:{item.title():<10s} = {round(count)}' 와 같은 형식을 사용해라.

 - python 3.6 부터 가능

2) pylint 도구를 사용하여 PEP8 스타일 가이드를 준수하라.

 - 탭 대신, 공백.
 - 문법적 중요 들여쓰기는 4칸 사용.
 - 라인은 79 를 넘지 않도록.
 - 긴 줄을 다음에 이어 쓸때에는 일반 들여쓰기 보다, 4 space 를 더 들여쓴다.
 - 함수와 클래스 사이는 빈줄 2개.
 - 클래스 내 함수는 빈줄 1개.
 - dic 은 키와 콜론 사이에는 공백 없음, 콜론과 값 사이에는 공백 한개.
 - 변수 대입 시, = 전후 스페이스는 하나씩만.

 - 함수/변수/attr는 소문자와 밑줄 사용.
 - 보호해야 할 attr 이름에는 _ 를 붙임.
 - 비공개 인스턴스 attr 는 __ 로 붙임.
 - 클래스는 첫번째 대문자 쓰고, 여러단어를 붙여서 씀. ( CapitalizedWord )

 - 상수는 모두 대문자로... APP_CAPS
 - 클래스에 들어있는 메서드를 호출할 때는 첫번째 인자 이름으로 반드시 self 사용
 - 클래스 메서드는 첫번째 인자 이름으로 cls 를 사용

 - 긍정식을 부정 ( if not a is b ) 대신, 부정을 내부로 ( if a is not b )
 - 컨테이너 검사는 len() 대신 not 컨테이너
 - 식이 여러줄에 걸쳐지면, 괄호로 둘러싸고 줄바꿈과 들여쓰기를 이용하라. \ 문자 보다는 괄호를 사용하라.

 - 임포트를 적을 때는 표준 라이브러리 모듈과 서드 파티 모듈, 개발 모듈을 섹션으로 나누고
   각 섹션은 알파벳 순서로 임포트 하라.


3) byte 와 str 차이를 알아 두라. (str 은 encod 영향이 있음)

4) 인덱스 대신, 대입을 사용하여 데이터를 언패킹하라.

 - a, b = c[:2] 같은거... 

5) range 보다는 enumerate 사용.

6) zip 을 사용하라.

7) for/while 루프뒤에 else 블록을 사용하지 마라.

8) 대입식 ( a := fresh_fruite.get('레몬', 0) 같은.. ) 을 사용해 반복을 피하라.

10) List 에서, 

 - a = b 로 대입하면 ref 로써, 값을 변경하면 함께 변경된다.
 - a = b[1:] 로 대입하면, a 는 다른 list 다.

11) 슬라이스에서 굳이, l[0:len(l)] 이런거 하지 마라.. 간단하게 ㅣ[:] 해라.

12) * 을 사용하는 언패킹을 사용하라.

 - oldest, snd_oldest, *others = car_ages_descending
 - >> 20 19 [15,9,8,7,1,0]

 - oldest, *others, youngest = car_ages_descending 도 가능.

 - 불가: *others = car_ages_descending 불가.
 - 불가: *first, *snd = car_ages_decending 불가.

 - 주의 사항: 별표 식은 항상 리스트를 만들어내기 때문에 메모리 사용에 유의해야 한다.

 